<!--
notice : you should install hector-slam at first,  sudo apt-get install ros-indigo-hector-slam
           this launch just for test, you should improve the param for the best result.
E-mail: kint.zhao@slamtec.com
This launch was modified by CÃ©sar Quiroz to run with RPLidar A1
Ubuntu 16.04 Xenial
ROS version: Kinetic
E-mail: cesarhcq@gmail.com
Read the wikipage of http://wiki.ros.org/hector_mapping
See the "map_update_distance_thresh" it means that the close obstacles can be ignored by Lidar.
 -->
<launch>

    <!--Laser rplidar-->
<!--     <include file="$(find rplidar_ros)/launch/rplidar.launch" /> -->

    <include file="$(find sick_scan)/launch/sick_tim_5xx.launch" />

	
	<!-- Gyro from MPU9250 -->
<!-- 	<include file="$(find i2c_imu)/launch/i2c_imu_auto.launch" />
 -->
    <!--Arduino Low-Controller -->
    <node pkg="rosserial_python" type="serial_node.py" name="arduino_controller" output= "screen">
        <param name="port" value="/dev/ttyACM0"/>  
        <param name="baud" value="57600"/>
    </node>

    <!--Gyro from smartphone-->
    <node name="imu_node" pkg="arduino_controller" type="gyro-smartphone.py" output="screen">
       <param name="host" value="192.168.42.195" /> <!--Need to change everytime when reconnect the device-->
       <param name="num_callibration_itrs" value="1" />
        <param name="debug" value="false" />
    </node>

    <!--Odometry Controller-->
    <node name="base_controller_node" pkg="base_controller" type="base_controller" output="screen">
        <param name="alpha" value="0.0" />
        <param name="use_imu" value="true" />
    </node>

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find base_controller)/rviz/laser_test_hector_mapping.rviz" /> 

    <arg name="tf_map_scanmatch_transform_frame_name" default="scanmatcher_frame"/>
    <arg name="base_frame" default="base_link"/> 
    <arg name="odom_frame" default="odom"/> <!-- base_link -->
    <arg name="map_frame" default="map"/>

    <arg name="pub_map_odom_transform" default="true"/>
    <arg name="pub_map_scanmatch_transform" default="true"/>

    <arg name="scan_subscriber_queue_size" default="5"/>
    <arg name="scan_topic" default="/scan"/>
    <arg name="map_size" default="2048"/>
    <arg name="namespace" default=""/>


    <node pkg="hector_mapping" type="hector_mapping" name="hector_height_mapping" output="screen" >
        
        <param name="map_frame" value="$(arg map_frame)" />
        <param name="base_frame" value="$(arg base_frame)" />
        <param name="odom_frame" value="$(arg odom_frame)" />

        <param name="use_tf_scan_transformation" value="true"/>
        <param name="use_tf_pose_start_estimate" value="false"/>
        <param name="pub_map_odom_transform" value="$(arg pub_map_odom_transform)"/>
        <param name="map_with_known_poses" value="false"/>
        <param name="map_resolution" value="0.05"/>
        <param name="map_size" value="$(arg map_size)"/>
        <param name="map_start_x" value="0.5"/>
        <param name="map_start_y" value="0.5"/>
        <param name="map_multi_res_levels" value="2"/>

        <!-- Map parameters update -->
        <param name="map_pub_period" value="0.5"/>
        <param name="update_factor_free" value="0.4"/>
        <param name="update_factor_occupied" value="0.9"/>
        <param name="map_update_distance_thresh" value="0.05"/>
        <param name="map_update_angle_thresh" value="0.1"/>
        <param name="laser_z_min_value" value="-1.0"/>
        <param name="laser_z_max_value" value="1.0"/>

        <param name="output_timing" value="false"/>
        <param name="advertise_map_service" value="true"/>

        <param name="scan_subscriber_queue_size" value="$(arg scan_subscriber_queue_size)"/>
        <param name="scan_topic" value="$(arg scan_topic)"/>
        
        <param name="pub_map_scanmatch_transform" value="$(arg scan_subscriber_queue_size)"/>
        <param name="tf_map_scanmatch_transform_frame_name" value="$(arg tf_map_scanmatch_transform_frame_name)"/>

    </node>
    <node pkg="base_controller" type="slam_odometry_node" name="slam_odometry_node" clear_params="true" output="screen">
        <rosparam command="load" file="$(find base_controller)/config/slam_odom_config.yaml"/>
    </node>
    
    <param name="/use_sim_time" value="false"/>

 <!--    <node name="teleop" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen" launch-prefix="xterm -e"/> -->

</launch>


